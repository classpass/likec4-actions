name: release

on:
  push:
    tags:
      - "v*"

jobs:

  build-package:
    name: build package
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write
      deployments: write
      packages: write
      actions: write
    steps:
      # - uses: wow-actions/use-app-token@v2
      #   id: likec4-bot
      #   with:
      #     app_id: ${{ secrets.BOT_APP_ID }}
      #     private_key: ${{ secrets.BOT_APP_PRIVATE_KEY }}

      - name: start deployment
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: release          

      # - id: tag
      #   run: |
      #     # "Set the tag name..."
      #     REF=$(printf "%q" "${{ github.ref }}")
      #     VERSION=${REF/refs\/tags\/v/}
      #     echo "version={value}" >> "$GITHUB_OUTPUT"
      #     echo "::set-output name=tag::$(eval printf "%s" "$TAG")"
      #   shell: bash    

      - name: checkout
        uses: actions/checkout@v4  
        with:
          # token: ${{ env.BOT_TOKEN }}
          fetch-depth: 0      
          fetch-tags: true

      - name: build package
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: ${{ github.repository }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          buildoptions: "--force-rm"
          tag_names: true

      - name: update deployment status
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          password: ${{ env.BOT_TOKEN }}
          status: ${{ job.status }}
          env: ${{ steps.deployment.outputs.env }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}                    
 
  github-release:
    name: github release
    needs: [build-package]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NOTES: ${{ github.event.head_commit.message }}
        run: |
          gh release create ${GITHUB_REF_NAME} --title ${GITHUB_REF_NAME} --notes "${NOTES}"
          
  move-tags:
    name: move tags
    needs: [build-package]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: parse semver
        id: semver_parser 
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: ${{ github.ref }}
          version_extractor_regex: '\/v(.*)$' 

      - name: move tags
        run: |
          MAJOR="v${{ steps.semver_parser.outputs.major }}"          
          git tag -fa $MAJOR -m "update ${MAJOR} tag"
          git push origin $MAJOR --force
          
          MINOR="${MAJOR}.${{ steps.semver_parser.outputs.minor }}"
          git tag -fa $MINOR -m "update ${MINOR} tag"
          git push origin $MINOR --force
